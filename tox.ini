[tox]
min_version = 4.0
# these are the default environments, i.e. the list of tests running when you
# execute `tox` in the command-line without anything else
envlist =
    lint
    build
    tests

[testenv]
passenv = *
lint_folders = "{toxinidir}/src"

[testenv:lint]
# this environement lints the Python code with flake8 (code linter), black (code
# formatter), and isort (sorting of imports)
package = skip
deps =
    flake8
    flake8-bugbear
    black
    blackdoc
    isort

commands =
    flake8 {[testenv]lint_folders}
    black --check --diff {[testenv]lint_folders}
    blackdoc --check --diff {[testenv]lint_folders}
    isort --check-only --diff {[testenv]lint_folders}

[testenv:format]
# this environement abuses tox to do actual formatting
#
# Users can run `tox -e format` to run formatting on all files
package = skip
deps =
    black
    blackdoc
    isort
commands =
    isort {[testenv]lint_folders}
    black {[testenv]lint_folders}
    blackdoc {[testenv]lint_folders}

[testenv:tests]
description = Run basic package tests with pytest (not the architectures)
passenv = *
deps =
    pytest

commands =
    pytest --import-mode=append {posargs}

[testenv:soap-bpnn]
passenv = *
deps =
    pytest

commands =
    echo "success"

[testenv:build-python]
# this environement makes sure one can build sdist and wheels for Python
deps =
    setuptools
    wheel
    cmake
    twine
    build

allowlist_externals =
    bash

commands =
    # check building sdist and wheels from a checkout
    python -m build
    twine check dist/*.tar.gz
    twine check dist/*.whl

    # check building wheels from the sdist
    bash -c "ls dist/"
    bash -c "python -m pip wheel --verbose dist/metatensor_models-*.tar.gz -w dist/test"

[flake8]
# longer lines for compatibility with other linters
max_line_length = 88
extend-ignore = E203

[isort]
profile = black
